<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>Aubrey Moore (web2py)</title><link>https://aubreymoore.github.io/blog/</link><description></description><atom:link href="https://aubreymoore.github.io/blog/categories/web2py.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sat, 14 Oct 2017 09:48:52 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Migrate a MySQL database to postgreql</title><link>https://aubreymoore.github.io/blog/posts/migrate-a-mysql-database-to-postgreql/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;p&gt;Ran into some problems using &lt;strong&gt;MySQL&lt;/strong&gt; on &lt;strong&gt;Dreamhost&lt;/strong&gt; as the online database manager for my &lt;strong&gt;web2py PestList app&lt;/strong&gt;.  Decided to upgrade the database to postgresql. &lt;strong&gt;DreamHost&lt;/strong&gt; doesn't support pg, so I had to revert to running pg on localhost.  After several attempts to convert the &lt;strong&gt;MySQL&lt;/strong&gt; tables to &lt;strong&gt;pg&lt;/strong&gt;, I came across &lt;strong&gt;pgloader&lt;/strong&gt;, which did the trick.  I simply created an empty &lt;strong&gt;pg&lt;/strong&gt; database and ran the following command.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ pgloader mysql://user:pass@mysql.guaminsects.net/pestlist postgresql://user:pass/localhost/import_test
&lt;/pre&gt;&lt;/div&gt;</description><category>MySQL</category><category>pgloader</category><category>postgresql</category><category>web2py</category><guid>https://aubreymoore.github.io/blog/posts/migrate-a-mysql-database-to-postgreql/</guid><pubDate>Sun, 11 Jun 2017 10:16:24 GMT</pubDate></item><item><title>Converting a web2py web site to a static web site</title><link>https://aubreymoore.github.io/blog/posts/web2py-to-static/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;p&gt;I am building a web site using the web2py framework.  The site uses data stored
in MySQL database to build an index page of crops. For each crop, there is a
link to a page which is built to display all pests attacking the crop.&lt;/p&gt;
&lt;p&gt;I would like to host
a copy of this as a static site in GitHub pages.  Creating the static site was
surprisingly easy:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run the web2py site in a local test browser.&lt;/li&gt;
&lt;li&gt;In an empty folder, use &lt;strong&gt;wget&lt;/strong&gt; to save local a local copy of every page generated by the site:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;wget --recursive --no-clobber --page-requisites \
 --adjust-extension --convert-links \
 --restrict-file-names=windows \
 --no-parent \
  http://127.0.0.1:8000/pestlist/default/crop_index
&lt;/pre&gt;


&lt;ol&gt;
&lt;li&gt;On the &lt;strong&gt;crop_index.html&lt;/strong&gt; page, change links to the &lt;strong&gt;pest_index.html&lt;/strong&gt; pages. Easily done using &lt;strong&gt;relace all&lt;/strong&gt; in &lt;strong&gt;atom&lt;/strong&gt; or some other
editor.&lt;/li&gt;
&lt;li&gt;Upload all files to a GitHub repo and enable GitHub pages for the repo.&lt;/li&gt;
&lt;li&gt;Create an index.html page in the top level folder of the repo which links to &lt;strong&gt;crop_index.html&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</description><category>github</category><category>python</category><category>web2py</category><guid>https://aubreymoore.github.io/blog/posts/web2py-to-static/</guid><pubDate>Sat, 27 May 2017 23:33:46 GMT</pubDate></item><item><title>Install web2py in a Conda Virtual Environment</title><link>https://aubreymoore.github.io/blog/posts/play-pen/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;p&gt;Here's how to get &lt;strong&gt;web2py&lt;/strong&gt; installed in a virtual environment using &lt;strong&gt;conda&lt;/strong&gt; instead of &lt;strong&gt;virtualenv&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Info on &lt;strong&gt;conda environments&lt;/strong&gt; is available here: 
https://uoa-eresearch.github.io/eresearch-cookbook/recipe/2014/11/20/conda/&lt;/p&gt;
&lt;h3&gt;Step 1. Create a directory for our web2py project.&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; Devel
mkdir playpen
&lt;span class="nb"&gt;cd&lt;/span&gt; playpen
&lt;/pre&gt;


&lt;h3&gt;Step 2. Create a virtual environment and activate it.&lt;/h3&gt;
&lt;p&gt;Note that &lt;strong&gt;web2py&lt;/strong&gt; runs under python 2, not python 3.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;conda create -n playpen &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2.7
&lt;span class="nb"&gt;source&lt;/span&gt; activate playpen
&lt;/pre&gt;


&lt;h3&gt;Step 3. Download and install web2py.&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;wget https://mdipierro.pythonanywhere.com/examples/static/web2py_src.zip
unzip web2py_src.zip
rm web2py_src.zip
&lt;/pre&gt;


&lt;h3&gt;Step 3. Install pygraphwiz (used to visualize models).&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;pip install pygraphviz
&lt;/pre&gt;


&lt;h3&gt;Step 4 -- Open web2py in a browser&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;playpen&lt;span class="o"&gt;)&lt;/span&gt; aubreymoore@aubreymoore-Aspire-7750Z:~/Devel/playpen/web2py$ python web2py.py
&lt;/pre&gt;


&lt;h3&gt;Step 5 -- Open web2py in a python shell&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;(playpen) aubreymoore@aubreymoore-Aspire-7750Z:~/Devel/playpen/web2py$ python web2py.py -S pestlist/default -M
&lt;/pre&gt;


&lt;h3&gt;Step 6. At the end of a session, the virtual environment can be deactivated.&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; deactivate playpen
&lt;/pre&gt;


&lt;h3&gt;Step 7. To undo everything:&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;conda remove -n playpen --all
&lt;span class="nb"&gt;cd&lt;/span&gt; ..
rm -rf playpen
&lt;/pre&gt;&lt;/div&gt;</description><category>Anaconda</category><category>python</category><category>virtualenv</category><category>web2py</category><guid>https://aubreymoore.github.io/blog/posts/play-pen/</guid><pubDate>Tue, 21 Feb 2017 03:01:06 GMT</pubDate></item></channel></rss>