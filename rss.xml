<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aubrey Moore</title><link>https://aubreymoore.github.io/blog/</link><description>All things techie.</description><atom:link rel="self" href="https://aubreymoore.github.io/blog/rss.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sat, 08 Apr 2017 17:35:11 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Setting Up an Online Weather Station</title><link>https://aubreymoore.github.io/blog/posts/setting-up-an-online-weather-station/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;h2&gt;Weather Station Setup&lt;/h2&gt;
&lt;p&gt;Was asked to set up an on-line weather station for the University of Guam's Agricutural Experiment Station at Yigo, Guam. The weather station is a Davis Vantage Pro 2 on a mast mounted on the roof of a 40 foot shipping container. The container is equipped with internet access via a wireless modem. Data is fetched from the weather instruments using a Davis Vantage Pro 2 console fitted with an optional data logger.&lt;/p&gt;
&lt;p&gt;Decided to use a Raspberry Pi 3 to read data from the weather station console via USB. Data is stored using weewx software, which also takes care of sending it to Weather Underground.&lt;/p&gt;
&lt;h3&gt;Step 1: Install weewx on RP&lt;/h3&gt;
&lt;h3&gt;Step 2: Remove the Fake Clock on the RP&lt;/h3&gt;
&lt;p&gt;Following the suggestion in
https://github.com/weewx/weewx/wiki/Raspberry-Pi,
I deleted the fake hardware clock from the RP:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get purge fake-hwclock
&lt;/pre&gt;


&lt;p&gt;This forces &lt;strong&gt;weewx&lt;/strong&gt; to wait until a software clock is set from the internet connection before resuming after a power outage.&lt;/p&gt;
&lt;h3&gt;Step 3: Create a Weather Underground Personal Weather Station and Configure weewx to Feed It&lt;/h3&gt;
&lt;p&gt;Followed these directions:
https://publiclab.org/notes/amysoyka/06-20-2014/how-to-set-up-your-weather-station-and-stream-it-to-the-internet&lt;/p&gt;
&lt;p&gt;WU assigned &lt;strong&gt;KYIGO4&lt;/strong&gt; as the weather station ID.&lt;/p&gt;
&lt;h3&gt;Step 4: Access Weather Station Online&lt;/h3&gt;
&lt;p&gt;The weather station is online at:
https://www.wunderground.com/personal-weather-station/dashboard?ID=KYIGO4&lt;/p&gt;&lt;/div&gt;</description><category>Raspberry Pi</category><guid>https://aubreymoore.github.io/blog/posts/setting-up-an-online-weather-station/</guid><pubDate>Sat, 08 Apr 2017 16:43:59 GMT</pubDate></item><item><title>Install web2py in a Conda Virtual Environment</title><link>https://aubreymoore.github.io/blog/posts/play-pen/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;p&gt;Here's how to get &lt;strong&gt;web2py&lt;/strong&gt; installed in a virtual environment using &lt;strong&gt;conda&lt;/strong&gt; instead of &lt;strong&gt;virtualenv&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Info on &lt;strong&gt;conda environments&lt;/strong&gt; is available here: 
https://uoa-eresearch.github.io/eresearch-cookbook/recipe/2014/11/20/conda/&lt;/p&gt;
&lt;h3&gt;Step 1. Create a directory for our web2py project.&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; Devel
mkdir playpen
&lt;span class="nb"&gt;cd&lt;/span&gt; playpen
&lt;/pre&gt;


&lt;h3&gt;Step 2. Create a virtual environment and activate it.&lt;/h3&gt;
&lt;p&gt;Note that &lt;strong&gt;web2py&lt;/strong&gt; runs under python 2, not python 3.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;conda create -n playpen &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2.7
&lt;span class="nb"&gt;source&lt;/span&gt; activate playpen
&lt;/pre&gt;


&lt;h3&gt;Step 3. Download and install web2py.&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;wget https://mdipierro.pythonanywhere.com/examples/static/web2py_src.zip
unzip web2py_src.zip
rm web2py_src.zip
&lt;/pre&gt;


&lt;h3&gt;Step 3. Install pygraphwiz (used to visualize models).&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;pip install pygraphviz
&lt;/pre&gt;


&lt;h3&gt;Step 4 -- Open web2py in a browser&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;playpen&lt;span class="o"&gt;)&lt;/span&gt; aubreymoore@aubreymoore-Aspire-7750Z:~/Devel/playpen/web2py$ python web2py.py
&lt;/pre&gt;


&lt;h3&gt;Step 5 -- Open web2py in a python shell&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;(playpen) aubreymoore@aubreymoore-Aspire-7750Z:~/Devel/playpen/web2py$ python web2py.py -S pestlist/default -M
&lt;/pre&gt;


&lt;h3&gt;Step 6. At the end of a session, the virtual environment can be deactivated.&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; deactivate playpen
&lt;/pre&gt;


&lt;h3&gt;Step 7. To undo everything:&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;conda remove -n playpen --all
&lt;span class="nb"&gt;cd&lt;/span&gt; ..
rm -rf playpen
&lt;/pre&gt;&lt;/div&gt;</description><category>Anaconda</category><category>python</category><category>virtualenv</category><category>web2py</category><guid>https://aubreymoore.github.io/blog/posts/play-pen/</guid><pubDate>Tue, 21 Feb 2017 03:01:06 GMT</pubDate></item><item><title>Tweeking Nikola CSS to Improve Table Display</title><link>https://aubreymoore.github.io/blog/posts/tweeking-nikola-css-to-improve-table-display/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;p&gt;Crappy default styling of tables was fixed by adding this file:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;~nik/mysite/files/assets/css/custom.css&lt;/strong&gt; **&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;/* Tweeks by Aubrey Moore */&lt;/span&gt;

&lt;span class="nt"&gt;td&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;th&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;text-align&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;even&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f2f2f2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>css</category><category>Nikola</category><guid>https://aubreymoore.github.io/blog/posts/tweeking-nikola-css-to-improve-table-display/</guid><pubDate>Mon, 20 Feb 2017 09:28:56 GMT</pubDate></item><item><title>USDA Farm Bill Funding for Coconut Rhinoceros Beetle Projects in Guam and Hawaii</title><link>https://aubreymoore.github.io/blog/posts/usda-farm-bill-funding-for-coconut-rhinoceros-beetle-projects-in-guam-and-hawaii/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Fiscal year&lt;sup&gt;*&lt;/sup&gt;&lt;/th&gt;
&lt;th align="right"&gt;Guam&lt;/th&gt;
&lt;th align="right"&gt;Hawaii&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.aphis.usda.gov/newsroom/2014/04/pdf/fy14_farm_bill_spending_plan.pdf"&gt;2014&lt;/a&gt;&lt;/td&gt;
&lt;td align="right"&gt;$180,000&lt;/td&gt;
&lt;td align="right"&gt;$2,448,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="http://www.aphis.usda.gov/plant_health/farmbill-section10007/fy15/FY15-FarmBill10007-PlantPlestandDisease-Spending-Plan.pdf"&gt;2015&lt;/a&gt;&lt;/td&gt;
&lt;td align="right"&gt;$179,844&lt;/td&gt;
&lt;td align="right"&gt;$2,200,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.aphis.usda.gov/plant_health/farmbill-section10007/fy16/Plant-Pest-Disease-FB-Spending-Plan-FY16.pdf"&gt;2016&lt;/a&gt;&lt;/td&gt;
&lt;td align="right"&gt;$250,000&lt;/td&gt;
&lt;td align="right"&gt;$1,399,384&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.aphis.usda.gov/plant_health/farmbill-section10007/fy17/FY2017-PPDMDPP-Spending-Plan.pdf"&gt;2017&lt;/a&gt;&lt;/td&gt;
&lt;td align="right"&gt;$475,000&lt;/td&gt;
&lt;td align="right"&gt;$1,225,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;strong&gt;$1,084,844&lt;/strong&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;strong&gt;$7,272,384&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;sup&gt;*&lt;/sup&gt;Click on fiscal year for details.&lt;/p&gt;&lt;/div&gt;</description><guid>https://aubreymoore.github.io/blog/posts/usda-farm-bill-funding-for-coconut-rhinoceros-beetle-projects-in-guam-and-hawaii/</guid><pubDate>Mon, 20 Feb 2017 07:08:40 GMT</pubDate></item><item><title>Using Scrapy to Find a String in a Web Site</title><link>https://aubreymoore.github.io/blog/posts/using-scrapy-to-find-a-string-in-a-web-site/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;p&gt;Last updated Sunday, 12. February 2017 07:53AM &lt;/p&gt;
&lt;p&gt;I wanted to find pages on the University of Guam College of Natural and Life Sciences Web Site containing a specific string. This short python script, which uses the &lt;a href="https://scrapy.org/"&gt;scrapy&lt;/a&gt; framework, does the trick:&lt;/p&gt;
&lt;h4&gt;test_spider.py&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scrapy.spiders&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CrawlSpider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Rule&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scrapy.contrib.linkextractors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LinkExtractor&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;someSpider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CrawlSpider&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'crawltest'&lt;/span&gt;
  &lt;span class="n"&gt;allowed_domains&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'cnas-re.uog.edu'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;start_urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'http://cnas-re.uog.edu'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;Rule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LinkExtractor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;allow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="n"&gt;follow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'parse_item'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'bell pepper'&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'test_spider_log.md'&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'**{} was found in &amp;lt;{}&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;
&lt;/pre&gt;


&lt;h4&gt;Executed from the command line using:&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;scrapy runspider test_spider.py -s &lt;span class="nv"&gt;DEPTH_LIMIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2
&lt;/pre&gt;


&lt;h4&gt;Output: test_spider_log.md&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;bell pepper&lt;/strong&gt; was found in &lt;a href="http://cnas-re.uog.edu/soils-of-guam/"&gt;http://cnas-re.uog.edu/soils-of-guam/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bell pepper&lt;/strong&gt; was found in &lt;a href="http://cnas-re.uog.edu/cnas-publications/?auth=&amp;amp;limit=17&amp;amp;tgid=&amp;amp;type=&amp;amp;usr=&amp;amp;yr="&gt;http://cnas-re.uog.edu/cnas-publications/?auth=&amp;amp;limit=17&amp;amp;tgid=&amp;amp;type=&amp;amp;usr=&amp;amp;yr=&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bell pepper&lt;/strong&gt; was found in &lt;a href="http://cnas-re.uog.edu/cnas-publications/?auth=&amp;amp;tgid=115&amp;amp;type=&amp;amp;usr=&amp;amp;yr="&gt;http://cnas-re.uog.edu/cnas-publications/?auth=&amp;amp;tgid=115&amp;amp;type=&amp;amp;usr=&amp;amp;yr=&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bell pepper&lt;/strong&gt; was found in &lt;a href="http://cnas-re.uog.edu/cnas-publications/?auth=&amp;amp;tgid=66&amp;amp;type=&amp;amp;usr=&amp;amp;yr="&gt;http://cnas-re.uog.edu/cnas-publications/?auth=&amp;amp;tgid=66&amp;amp;type=&amp;amp;usr=&amp;amp;yr=&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;&lt;/div&gt;</description><category>python scrapy</category><guid>https://aubreymoore.github.io/blog/posts/using-scrapy-to-find-a-string-in-a-web-site/</guid><pubDate>Sat, 11 Feb 2017 09:57:33 GMT</pubDate></item><item><title>Publish Nikola Site on GitHub</title><link>https://aubreymoore.github.io/blog/posts/publish-nikola-site-on-github/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;p&gt;Publishing my Nikola site on &lt;strong&gt;github pages&lt;/strong&gt; was remarkably easy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Instructions are found in the Nikola Handbook here: &lt;a href="https://getnikola.com/handbook.html#deploying-to-github"&gt;https://getnikola.com/handbook.html#deploying-to-github&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Created a new repo on github called &lt;strong&gt;aubreymoore/blog&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IMPORTANT: Go to the settings page for the new repo and enable github pages. The root URL for these pages will be at &lt;a href="https://aubreymoore.github.io/blog/"&gt;https://aubreymoore.github.io/blog/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Created a git repo on my local machine:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;git init .
git remote add origin git@github.com:aubreymoore/blog.git
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;Pushed my site to github from the command line:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;nikola github_deploy
&lt;/pre&gt;&lt;/div&gt;</description><category>github pages</category><category>Nikola</category><guid>https://aubreymoore.github.io/blog/posts/publish-nikola-site-on-github/</guid><pubDate>Sat, 11 Feb 2017 00:09:34 GMT</pubDate></item><item><title>Failed Attempt to Run wep2py on Dreamhost</title><link>https://aubreymoore.github.io/blog/posts/failed-attempt-to-run-wep2py-on-dreamhost/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;h2&gt;Failed Attempt to Run wep2py on Dreamhost&lt;/h2&gt;
&lt;p&gt;Saturday, 11. February 2017 06:37AM &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSH to DreamHost shared hosting.&lt;/li&gt;
&lt;li&gt;Run python. Version is 2.7.3&lt;/li&gt;
&lt;li&gt;virtualenv is available&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Create virtualenv&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Reference http://docs.python-guide.org/en/latest/dev/virtualenvs/&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;mkdir my_project_folder
&lt;span class="nb"&gt;cd&lt;/span&gt; my_project_folder
virtualenv venv
&lt;span class="nb"&gt;source&lt;/span&gt; venv/bin/activate
pip install requests
deactivate
&lt;/pre&gt;


&lt;h3&gt;Download web2py&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;wget https://mdipierro.pythonanywhere.com/examples/static/web2py_src.zip
unzip web2py_src.zip
rm web2py_src.zip
&lt;/pre&gt;


&lt;h3&gt;First Attempt&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;venv&lt;span class="o"&gt;)&lt;/span&gt;aubreymoore@cactus:~/my_project_folder $ &lt;span class="nb"&gt;cd&lt;/span&gt; web2py
&lt;span class="o"&gt;(&lt;/span&gt;venv&lt;span class="o"&gt;)&lt;/span&gt;aubreymoore@cactus:~/my_project_folder/web2py $ ls
CHANGELOG  LICENSE  MANIFEST.in  NEWINSTALL  README.markdown  VERSION  anyserver.py  applications  examples  extras  gluon  handlers  scripts  site-packages  web2py.py
&lt;span class="o"&gt;(&lt;/span&gt;venv&lt;span class="o"&gt;)&lt;/span&gt;aubreymoore@cactus:~/my_project_folder/web2py $ python web2py.py
web2py Web Framework
Created by Massimo Di Pierro, Copyright 2007-2017
Version 2.14.6-stable+timestamp.2016.05.10.00.21.47
Database drivers available: sqlite3, imaplib, pyodbc, pymysql, pg8000
WARNING:web2py:GUI not available because Tk library is not installed
choose a password:

please visit:
    http://127.0.0.1:8000/
use &lt;span class="s2"&gt;"kill -SIGTERM 28797"&lt;/span&gt; to shutdown the web2py server
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;wep2py seems to run properly, but the local server it sets up is inaccessable&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Helpful Sites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://groups.google.com/forum/#!topic/web2py/nixNhDrxHtQ&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Seems Overly Complicated - Give Up and Deploy to pythonanywhere&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;to clean up, we simply delete my_project_folder&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
rm -rf my_project_folder
&lt;/pre&gt;&lt;/div&gt;</description><category>DreamHost</category><category>PythonAnywhere</category><category>web2py</category><guid>https://aubreymoore.github.io/blog/posts/failed-attempt-to-run-wep2py-on-dreamhost/</guid><pubDate>Fri, 10 Feb 2017 23:28:41 GMT</pubDate></item><item><title>Nikola Site is on GitHub</title><link>https://aubreymoore.github.io/blog/posts/nikola-site-is-on-github/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a href="https://github.com/getnikola/nikola-site"&gt;Here it is.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Need to go to work now.&lt;/p&gt;&lt;/div&gt;</description><category>Nikola</category><guid>https://aubreymoore.github.io/blog/posts/nikola-site-is-on-github/</guid><pubDate>Thu, 29 Dec 2016 00:14:01 GMT</pubDate></item><item><title>Taxonomic Notes</title><link>https://aubreymoore.github.io/blog/posts/taxonomic-notes/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;h4&gt;Recording Synonyms&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;According to &lt;a href="http://www.gbif.org/system/files_force/gbif_resource/resource-80642/gbif_gna_profile_reference_guide.pdf?download=1"&gt;GBIF GNA Profile Reference Guide for Darwin Core Archive, Core Terms and Extensions&lt;/a&gt;: "Synonyms occupy separate lines and therefore also have unique taxonIDs."&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In &lt;a href="http://www.gbif.org/system/files_force/gbif_resource/resource-80647/checklist_how-tw.v2.pdf"&gt;Publishing Species Checklists, Step-by-Step Guide&lt;/a&gt;, there is a good example of how to handle synonyms on page 18.  This is a very good, detailed reference.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Several references indicate that misspellings should be noted in &lt;strong&gt;dwc:taxonRemarks&lt;/strong&gt;. Example: "this name is a misspelling in common use"&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><guid>https://aubreymoore.github.io/blog/posts/taxonomic-notes/</guid><pubDate>Wed, 28 Dec 2016 22:43:00 GMT</pubDate></item><item><title>Configuring Nikola and Adding Full Text Search</title><link>https://aubreymoore.github.io/blog/posts/test-post/</link><dc:creator>Aubrey Moore</dc:creator><description>&lt;div&gt;&lt;p&gt;This &lt;a href="http://simonvanderveldt.nl/configuring-nikola/"&gt;post&lt;/a&gt; was helpful in learning how to configure Nikola.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ralsina.me/weblog/posts/standalone-search-in-nikola.html#id2"&gt;Here's a post that shows how to add full text search to a Nikola site.&lt;/a&gt; &lt;/p&gt;&lt;/div&gt;</description><category>Nikola</category><guid>https://aubreymoore.github.io/blog/posts/test-post/</guid><pubDate>Wed, 28 Dec 2016 21:43:54 GMT</pubDate></item></channel></rss>